import React, { useState, useEffect } from "react"
import { Redirect } from "react-router-dom"
import "../../../assets/scss/admin.scss"
import {
    getAdminList,
    createAdmin,
    updateAdmin,
} from "../../../services/admin_logs"
import { MdMenu } from "react-icons/md"
import AdminSidebar from "../Sidebar/admin_sidebar"

const AdminSettings = ({ logged, username }) => {
    const [admins, setAdmins] = useState([])
    const [currentUsername, setCurentUsername] = useState("")
    const [password, setPassword] = useState("")
    const [newPassword, setNewPassword] = useState("")
    const [passwordError, setPasswordError] = useState("")
    const [newPasswordError, setNewPasswordError] = useState("")
    const [showMenu, setShowMenu] = useState(true)

    useEffect(() => {
        loadAdminList()
    }, [])

    useEffect(() => {
        const handleResize = () => {
            if (window.innerWidth >= 767) {
                setShowMenu(true)
            } else {
                setShowMenu(false)
            }
        }

        window.addEventListener("resize", handleResize)
    })
    const handleChange = (event) => {
        if (event.target.id === "password") {
            setPassword(event.target.value)
        } else if (event.target.id === "newPassword") {
            setNewPassword(event.target.value)
        }
    }

    const errorFree = () => {
        if (password === "") {
            setPasswordError("Password is required.")
            return false
        }
        return true
    }

    const errorFreeNewPassword = () => {
        if (newPassword === "") {
            setNewPasswordError("New Password is required.")
            return false
        }
        return true
    }

    const loadAdminList = async () => {
        var adminList = await getAdminList()
        if (adminList.success) {
            setAdmins(adminList.adminList)
        } else {
            setAdmins([])
        }
    }

    const createNewAdmin = async () => {
        if (errorFree()) {
            var newAdmin = await createAdmin(password)
            if (newAdmin.success) {
                loadAdminList()
                setPasswordError("")
                setPassword("")
            } else {
                setPasswordError(newAdmin.message)
            }
        }
    }

    const editAdmin = async () => {
        if (errorFreeNewPassword()) {
            if (currentUsername !== "") {
                var editedAdmin = await updateAdmin(
                    currentUsername,
                    newPassword
                )
                if (editedAdmin.success) {
                    loadAdminList()
                    setNewPasswordError("")
                    setCurentUsername("")
                    setNewPassword("")
                } else {
                    setNewPasswordError(editedAdmin.message)
                    setCurentUsername("")
                }
            } else {
                setNewPasswordError("Please select admin to be updated.")
            }
        }
    }
    return logged ? (
        <>
            <AdminSidebar
                username={username}
                showMenu={showMenu}
                setShowMenu={setShowMenu}
            />
            <div className="admin-wrapper d-flex">
                <div
                    className={`admin-content ${
                        showMenu ? "admin-narrow" : ""
                    } admin-settings`}
                >
                    <div className="container-fluid pt-2">
                        <div className="admin-title d-flex py-2 mb-3 white">
                            <div
                                className={`admin-title-hamburger ml-2 ${
                                    showMenu ? "d-none" : ""
                                }`}
                            >
                                <MdMenu
                                    size={32}
                                    onClick={() => setShowMenu(true)}
                                />
                            </div>
                            <div>
                                <h3 className="ml-3">Settings</h3>
                            </div>
                        </div>
                        <div className="row mb-2">
                            <div className="col-md-6 mb-2">
                                <div className="admin-recent-logins py-2 px-3 white">
                                    <h3>Create New Admin User</h3>
                                    <p className="mt-4">
                                        Admin Username will be generated by the
                                        system.
                                    </p>
                                    <div className="admin-logins px-lg-5">
                                        <div className="input-group mb-2">
                                            <input
                                                id="password"
                                                type="password"
                                                className="form-control"
                                                placeholder="Enter Password"
                                                value={password}
                                                onChange={handleChange}
                                            />
                                            <div className="input-group-append">
                                                <button
                                                    className="btn btn-outline-primary"
                                                    type="button"
                                                    onClick={() =>
                                                        createNewAdmin()
                                                    }
                                                >
                                                    Create
                                                </button>
                                            </div>
                                        </div>
                                        <p className="text-danger">
                                            {passwordError}
                                        </p>
                                    </div>
                                </div>
                            </div>
                            <div className="col-md-6 mb-2">
                                <div className="admin-total-scans py-2 px-3 white">
                                    <h3>Change Admin User Password</h3>
                                    <div className="admin-scans">
                                        <p className="mt-4 pl-lg-5">
                                            Username: {currentUsername}
                                        </p>
                                        <div className="input-group mb-2 px-lg-5">
                                            <input
                                                id="newPassword"
                                                type="password"
                                                className="form-control"
                                                placeholder="Enter New Password"
                                                value={newPassword}
                                                onChange={handleChange}
                                            />
                                            <div className="input-group-append">
                                                <button
                                                    className="btn btn-outline-warning"
                                                    type="button"
                                                    onClick={() => editAdmin()}
                                                >
                                                    Update
                                                </button>
                                            </div>
                                        </div>
                                        <p className="text-danger pl-lg-5">
                                            {newPasswordError}
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div className="admin-list py-3 px-1 white mb-3 p">
                            <div className="container-fluid">
                                <h3>Admin Users</h3>
                                <div className="row">
                                    <div className="col-8 mx-auto">
                                        <div className="admin-list-table">
                                            <table className="table table-striped">
                                                <thead className="admin-logs-table-header">
                                                    <tr>
                                                        <th scope="col">#</th>
                                                        <th scope="col">
                                                            Username
                                                        </th>
                                                        <th scope="col">
                                                            Action
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    {admins.map(
                                                        (value, index) => {
                                                            return (
                                                                <tr key={index}>
                                                                    <th scope="row">
                                                                        {index +
                                                                            1}
                                                                    </th>
                                                                    <td>
                                                                        {
                                                                            value.username
                                                                        }
                                                                    </td>
                                                                    <td
                                                                        className="admin-list-edit"
                                                                        onClick={() =>
                                                                            setCurentUsername(
                                                                                value.username
                                                                            )
                                                                        }
                                                                    >
                                                                        Edit
                                                                    </td>
                                                                </tr>
                                                            )
                                                        }
                                                    )}
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </>
    ) : (
        <Redirect to="/backend/login" />
    )
}

export default AdminSettings
